"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1645],{2640:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>o,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var r=i(4848),s=i(8453);const t={slug:"js-cheatsheet-blog-post",title:"JS Cheatsheet Blog Post",authors:"Yihan",tags:["JS"]},l="File with heading",c={permalink:"/blog/js-cheatsheet-blog-post",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-03-03-js-cheatsheet-blog-post.md",source:"@site/blog/2023-03-03-js-cheatsheet-blog-post.md",title:"JS Cheatsheet Blog Post",description:"1 Array",date:"2023-03-03T00:00:00.000Z",tags:[{inline:!0,label:"JS",permalink:"/blog/tags/js"}],readingTime:5.605,hasTruncateMarker:!1,authors:[{name:"Yihan",title:"Maintainer of amazingLychee",url:"https://github.com/amazingLychee",imageURL:"https://github.com/amazingLychee.png",key:"Yihan",page:null}],frontMatter:{slug:"js-cheatsheet-blog-post",title:"JS Cheatsheet Blog Post",authors:"Yihan",tags:["JS"]},unlisted:!1,prevItem:{title:"2024Spring",permalink:"/blog/2024Spring"},nextItem:{title:"Welcome",permalink:"/blog/welcome"}},d={authorsImageUrls:[void 0]},a=[{value:"1 Array",id:"1-array",level:4},{value:"1.1 Array creation",id:"11-array-creation",level:5},{value:"1.2 Array modification",id:"12-array-modification",level:5},{value:"2 String",id:"2-string",level:4},{value:"3 Set",id:"3-set",level:4},{value:"4 Hashtable (object)",id:"4-hashtable-object",level:4},{value:"5 Heap",id:"5-heap",level:4},{value:"6 Union find",id:"6-union-find",level:4},{value:"7 Trie",id:"7-trie",level:4},{value:"8 Monotonic queue e.g. 239-sliding-window-maximum",id:"8-monotonic-queue-eg-239-sliding-window-maximum",level:4},{value:"9 Quick sort/select",id:"9-quick-sortselect",level:4},{value:"10 Bianry index tree",id:"10-bianry-index-tree",level:4}];function h(n){const e={code:"code",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h4,{id:"1-array",children:"1 Array"}),"\n",(0,r.jsx)(e.h5,{id:"11-array-creation",children:"1.1 Array creation"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a new array"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const A = [];"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a subarray"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const A = B.slice(l, r); // From idx l to r, r is not included"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Copy from other array"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const A = [...B];"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create an array from a set"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const A = [...mySet];"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create an array from a string"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const A = [...myStr];"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create an array from hashmap keys"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const A = Object.keys(myMap);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create an array from hashmap values"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const A = Object.values(myMap);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create an array from hashmap keys and values"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const A = Object.entries(myMap);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Create an array with length ",(0,r.jsx)(e.code,{children:"m"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const dp = Array(m);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Create an array with length ",(0,r.jsx)(e.code,{children:"m"}),", initialized as ",(0,r.jsx)(e.code,{children:"0"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const dp = Array(m).fill(0);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Create a 2-D array with dimension ",(0,r.jsx)(e.code,{children:"r x c"}),", initialized as ",(0,r.jsx)(e.code,{children:"-1"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const dp = Array.from(Array(r), () => Array(c).fill(-1));"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h5,{id:"12-array-modification",children:"1.2 Array modification"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Add an element"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.push(x);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Add all elements from other array"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.push(...B);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Add an element from left"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.unshift(x);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Pop an element"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.pop();"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Pop an element from left"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.shift();"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Remove/add element(s)"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.splice(idx, deleteCnt, x); // in place"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Reverse an array"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.reverse(); // in place"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Sort an array in increasing order"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.sort((a, b) => a - b); // in place"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Other usages"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"A.map(); A.filter(); A.every(); A.some();"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"2-string",children:"2 String"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a string literal"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'const s = "abcd";'})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a string from other string"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const s1 = s2.substring(l, r); // From idx l to r, r is not included"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a string by joining an array"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'const s = A.join("");'})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a string of repeating char"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'const s = "xyz".repeat(5);'})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Reverse a string"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'const s1 = [...s2].reverse().join("");'})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Loop a string"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"for (const char of s) {}"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Split a string"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'const arr = s.split(" ");'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"3-set",children:"3 Set"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a new set"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const seen = new Set();"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a set from an array"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const seen = new Set(A);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Add an element"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"seen.add(x);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Delete an element"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"seen.delete(x);"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"4-hashtable-object",children:"4 Hashtable (object)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a new hashtable"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const g = {};"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Add a key value pair"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"g[a] = b;"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Delete a key"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"delete g[a];"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Detect key exists"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"if (key in g) {}"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"if (g[key]) {} // Only works if you know there is no falsy value"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"if (g[key] !== undefined) {}"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Loop through key value pair"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"for (const [key, value] of Object.entries(g)) {}"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"5-heap",children:"5 Heap"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a min heap"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const minHeap = new Heap((a, b) => a - b);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a max heap"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const maxHeap = new Heap((a, b) => b - a);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a custom heap"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"const heap = new Heap((a, b) => a[0] - b[0] ? a[0] - b[0] : a[1] - b[1]);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a heap from an array"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"minHeap.heapify(A);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Add an element"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"minHeap.add(x);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Pop an element"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"minHeap.pop();"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Peek an element"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"minHeap.peek();"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Delete an element"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"minHeap.delete(x);"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Heap implementation"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"  class Heap {   \n      constructor(comparator) {     \n            this.arr = [];     \n            this.comparator = comparator;   \n      }    \n      \n      getL() {     \n            return this.arr.length;   \n      } \n\n      getPIdx(i) {     \n            return Math.floor((i - 1) / 2);   \n      }    \n         \n      getLIdx(i) {     \n            return 2 * i + 1;   \n      }    \n         \n      getRIdx(i) {     \n            return 2 * i + 2;   \n      }    \n         \n      swap(i, j) {     \n            [this.arr[i], this.arr[j]] = [this.arr[j], this.arr[i]];   \n      }    \n         \n      peek() {     \n            if (!this.arr.length) \n                  return null;     \n            return this.arr[0];   \n      }    \n         \n      pop() {     \n            if (!this.arr.length) \n                  return null;     \n            if (this.arr.length === 1) \n                  return this.arr.pop();     \n            const res = this.arr[0];     // Move last item from end to head     \n            this.arr[0] = this.arr.pop();     \n            this.heapifyDown();     \n            return res;   \n      }    \n            \n      add(n) {     \n            this.arr.push(n);     \n            this.heapifyUp();   \n      }    // Default idx is the first idx   \n            \n      heapifyDown(idx = 0) {     \n            let p = idx;     \n            let c;     \n            // Compare parent with its children and swap with target child if necessary     \n      // Do it in a loop     \n            while (this.getLIdx(p) < this.arr.length) {       \n            // Get target child first       \n                  if (this.getRIdx(p) < this.arr.length && this.comparator(this.arr[this.getRIdx(p)], this.arr[this.getLIdx(p)]) < 0)         \n                        c = this.getRIdx(p);       \n                  else \n                        c = this.getLIdx(p);       \n            // Compare with parent, if not valid, break       \n                  if (this.comparator(this.arr[p], this.arr[c]) <= 0) \n                        break;       \n            // Swap       \n                  this.swap(p, c);       \n                  p = c;     \n            }   \n      }    \n            // Default idx is the last idx   \n      heapifyUp(idx = this.arr.length - 1) {     \n            let c = idx;     \n            let p = null;     \n            // While has parent     \n            while (c) {       \n                  p = this.getPIdx(c);       \n                  if (this.comparator(this.arr[p], this.arr[c]) <= 0) break;       \n            // Swap       \n                  this.swap(p, c);       \n                  c = p;     \n            }   \n      }    \n            \n      heapify(A) {     // Bottom up     // Heapify down each item     \n            this.arr = A;     \n            for (let i = Math.floor(A.length / 2); i >= 0; i--) {       \n                  this.heapifyDown(i);     \n            }   \n      }    \n            \n      delete(n) {     \n            const idx = this.arr.indexOf(n);     \n            this.arr[idx] = this.arr[this.arr.length - 1];     \n            this.arr.pop();     \n            this.heapifyDown(idx);   \n      }\n}\n"})}),"\n",(0,r.jsx)(e.h4,{id:"6-union-find",children:"6 Union find"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"class DS {   \n      constructor(n) {     \n            this.root = [...Array(n + 1).keys()];     \n            this.rank = Array(n + 1).fill(0);   \n      }   \n\n      find(i) {     \n            if (i !== this.root[i]) \n                  this.root[i] = this.find(this.root[i]);     \n            return this.root[i];   \n      }   \n\n      union(i, j) {     \n            const [root1, root2] = [this.find(i), this.find(j)];     \n            if (root1 === root2) \n                  return false;     \n            if (this.rank[root1] > this.rank[root2]) \n                  this.root[root2] = root1;     \n            else if (this.rank[root1] < this.rank[root2]) \n                  this.root[root1] = root2;     \n            else {       \n                  this.root[root2] = root1;       this.rank[root1]++;     \n            }     \n            return true;   \n      } \n}\n"})}),"\n",(0,r.jsx)(e.h4,{id:"7-trie",children:"7 Trie"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"// Construct a trie from W (W is an array of words) \nconst trie = {}; \nW.forEach((w) => {   \n      let node = trie;   \n\n      for (const c of w) {     \n            if (!node[c]) \n            node[c] = {};     \n            node = node[c];   \n      }   \n\n      node.end = true; \n});\n"})}),"\n",(0,r.jsx)(e.h4,{id:"8-monotonic-queue-eg-239-sliding-window-maximum",children:"8 Monotonic queue e.g. 239-sliding-window-maximum"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"const maxSlidingWindow = (A, k) => {   \n      const win = []; // Store idx  \n      const res = [];   \n\n      for (let i = 0; i < A.length; i++) {     \n      // Need to get max from win[0], so keep an descending queue     \n      while (win.length && A[win[win.length - 1]] <= A[i]) \n            win.pop();     \n            win.push(i);     \n      // Remove first element if it's out of window     \n      if (win[0] === i - k) \n            win.shift();     \n      if (i >= k - 1) \n            res.push(A[win[0]]);   \n      }   \n      return res; \n};\n"})}),"\n",(0,r.jsx)(e.h4,{id:"9-quick-sortselect",children:"9 Quick sort/select"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"const partition = (A, l, r) => {   \n      let j = l;   \n      let boundary = A[r];   \n\n      for (let i = l; i < r; i++) {     \n            if (A[i] < boundary) {       \n                  [A[i], A[j]] = [A[j], A[i]];       \n                  j++;     \n            }   \n      }   \n      [A[j], A[r]] = [A[r], A[j]];   \n      return j; \n};  \n\nconst quickSort = (A, l, r) => {   \n      if (r <= l) return; \n        \n      const idx = partition(A, l, r);   \n      quickSort(A, l, idx - 1);   \n      quickSort(A, idx + 1, r);   \n      return A; \n};\n"})}),"\n",(0,r.jsx)(e.h4,{id:"10-bianry-index-tree",children:"10 Bianry index tree"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"class BIT {   \n      constructor(n) {     \n            this.pre = Array(n + 1).fill(0);   \n      }   \n\n      update(i, delta) {     \n            while (i < this.pre.length) {       \n                  this.pre[i] += delta;       \n                  i += i & -i;     \n            }   \n      }  \n                        \n      getSum(i) {     \n            let res = 0;     \n            while (i) {       \n                  res += this.pre[i];       \n                  i -= i & -i;     \n            }     \n            return res;   \n      } \n}\n"})})]})}function o(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>c});var r=i(6540);const s={},t=r.createContext(s);function l(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);